version: '2'

volumes:
  orderer0.example.com:
  orderer1.example.com:
  orderer2.example.com:

networks:
  byfn:

services:
  zookeeper0:
    extends:
      file: docker-compose-base.yaml
      service: zookeeper
    container_name: zookeeper0
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - byfn

  zookeeper1:
    extends:
      file: docker-compose-base.yaml
      service: zookeeper
    container_name: zookeeper1
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - byfn

  zookeeper2:
    extends:
      file: docker-compose-base.yaml
      service: zookeeper
    container_name: zookeeper2
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - byfn

  kafka0:
    extends:
      file: docker-compose-base.yaml
      service: kafka
    container_name: kafka0
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka5:9092
      - KAFKA_MESSAGE_MAX_BYTES=1000012 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 B
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760 B
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  kafka1:
    extends:
      file: docker-compose-base.yaml
      service: kafka
    container_name: kafka1
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_MESSAGE_MAX_BYTES=1000012 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 B
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760 B
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  kafka2:
    extends:
      file: docker-compose-base.yaml
      service: kafka
    container_name: kafka2
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_MESSAGE_MAX_BYTES=1000012 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 B
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760 B
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  kafka3:
    extends:
      file: docker-compose-base.yaml
      service: kafka
    container_name: kafka3
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092
      - KAFKA_MESSAGE_MAX_BYTES=1000012 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576 B
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760 B
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - byfn

  orderer0.example.com:
    extends:
      file: docker-compose-base.yaml
      service: orderer
    container_name: orderer0.example.com
    environment:
      - ORDERER_HOST=orderer0.example.com
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
    extra_hosts:
      - "peer0.org1.example.com:${ORG1}"
      - "peer1.org1.example.com:${ORG1}"
      - "peer0.org2.example.com:${ORG2}"
      - "peer1.org2.example.com:${ORG2}"
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls:/var/hyperledger/orderer/tls
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - orderer0.example.com:/var/hyperledger/production/orderer
    networks:
      - byfn
    ports:
      - 7050:7050

  orderer1.example.com:
    extends:
      file: docker-compose-base.yaml
      service: orderer
    container_name: orderer1.example.com
    environment:
      - ORDERER_HOST=orderer1.example.com
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
    extra_hosts:
      - "peer0.org1.example.com:${ORG1}"
      - "peer1.org1.example.com:${ORG1}"
      - "peer0.org2.example.com:${ORG2}"
      - "peer1.org2.example.com:${ORG2}"
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls:/var/hyperledger/orderer/tls
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - orderer1.example.com:/var/hyperledger/production/orderer
    networks:
      - byfn
    ports:
      - 8050:7050

  orderer2.example.com:
    extends:
      file: docker-compose-base.yaml
      service: orderer
    container_name: orderer2.example.com
    environment:
      - ORDERER_HOST=orderer2.example.com
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
    extra_hosts:
      - "peer0.org1.example.com:${ORG1}"
      - "peer1.org1.example.com:${ORG1}"
      - "peer0.org2.example.com:${ORG2}"
      - "peer1.org2.example.com:${ORG2}"
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/orderer/tls
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - orderer2.example.com:/var/hyperledger/production/orderer
    networks:
      - byfn
    ports:
      - 9050:7050
